// <auto-generated />
using System;
using MRQ.CryptoBot.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MRQ.CryptoBot.Repository.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    partial class SQLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("MRQ.CryptoBot.Domain.Entities.Moralis.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExchangeAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExchangeName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UsdPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("MRQ.CryptoBot.Domain.Entities.Moralis.NativePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BalanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Decimals")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("NativePrices");
                });

            modelBuilder.Entity("MRQ.CryptoBot.Domain.Entities.Moralis.NativePrice", b =>
                {
                    b.HasOne("MRQ.CryptoBot.Domain.Entities.Moralis.Balance", "Balance")
                        .WithMany()
                        .HasForeignKey("BalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Balance");
                });
#pragma warning restore 612, 618
        }
    }
}
